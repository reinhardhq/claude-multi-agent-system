###### Claude Code Multi‑Agent tmux config ######

# マウス操作を有効にする
set-option -g mouse on

# ダブルクリックでタイルレイアウトに変更
bind -n DoubleClick1Pane select-layout tiled


# tmux.conf - 完成版

# マウス機能を有効にする
set -g mouse on

# viモードを有効にする
setw -g mode-keys vi
set -g set-clipboard on

# viモードでの選択とコピー (macOSのpbcopy用)
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

# ひらがな状態での「」」でもコピーモードに入る
bind-key 」 copy-mode

# 設定の再読み込みを簡単にする
bind r source-file ~/.tmux.conf \; display-message "Config reloaded!"

# === スクロール改善設定 ===
# スクロール履歴の行数を増やす
set -g history-limit 50000

# マウスホイールのスクロール設定を超細かく調整
bind-key -T copy-mode-vi WheelUpPane send-keys -X scroll-up
bind-key -T copy-mode-vi WheelDownPane send-keys -X scroll-down

# 通常モードでのマウスホイール設定（1行ずつに制限）
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -X scroll-up' 'select-pane -t=; copy-mode -e; send-keys -X scroll-up'"
bind -n WheelDownPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -X scroll-down' 'send-keys -M'"

# Shiftを押しながらのマウスホイールで高速スクロール
bind -n S-WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -X halfpage-up' 'select-pane -t=; copy-mode -e; send-keys -X halfpage-up'"
bind -n S-WheelDownPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -X halfpage-down' 'send-keys -M'"

# copy-modeでのキーバインド改善 (j/k, C-u/C-d, 矢印キー)
bind-key -T copy-mode-vi j send-keys -X scroll-down
bind-key -T copy-mode-vi k send-keys -X scroll-up
bind-key -T copy-mode-vi C-u send-keys -X halfpage-up
bind-key -T copy-mode-vi C-d send-keys -X halfpage-down
bind-key -T copy-mode-vi Up send-keys -X scroll-up
bind-key -T copy-mode-vi Down send-keys -X scroll-down

# === ペインのデザイン設定 ===
# ペインの境界線をできるだけ太く目立たせる
set -g pane-border-style fg=cyan,bg=default
set -g pane-active-border-style fg=red,bg=default,bold
set -g pane-border-lines heavy

# ペインのタイトル表示設定
set -g pane-border-status top
set -g pane-border-format " #{?pane_active,#[fg=yellow,bold],#[fg=cyan,bold]}#{pane_title} #[fg=yellow,bold][#(cd '#{pane_current_path}' && git rev-parse --abbrev-ref HEAD 2>/dev/null)]"

# アクティブペインをさらに強調
set -g window-active-style 'fg=terminal,bg=terminal'
set -g window-style 'fg=colour247,bg=colour236'

# === ステータスバー設定 (修正済み) ===
# ステータスバーを画面上部に配置
set -g status-position top

# ステータスバーの基本スタイル（黒背景に白文字）
set -g status-style bg=black,fg=white

# ウィンドウリストを左寄せにする
set -g status-justify left

# 【左側】セッション名を表示
set -g status-left-length 20
set -g status-left '#[fg=cyan,bold]S: #S'

# 【右側】カレントパスとGitブランチを表示
set -g status-right-length 150
set -g status-right "#[fg=cyan,bold]#(echo '#{pane_current_path}' | sed 's|^/Users/motokidaisuke|~|') #[fg=yellow,bold](#(cd '#{pane_current_path}' && git rev-parse --abbrev-ref HEAD 2>/dev/null || echo '')) #[default]"

# 【中央のウィンドウリスト】のスタイル
# 非アクティブなウィンドウ (番号:名前)
setw -g window-status-format ' #I:#W '

# 現在アクティブなウィンドウ (黄色背景で強調)
setw -g window-status-current-format '#[fg=black,bg=yellow,bold] #I:#W '

# ステータスバーの更新間隔
set -g status-interval 1

# === その他の設定 ===
# ウィンドウ名の自動リネームを無効化（手動で設定した名前を保持）
set -g automatic-rename off

# メッセージの表示時間を長くする
set -g display-time 2000

# セッション・ウィンドウの切り替えや名前変更を簡単にする
bind-key s choose-session -F "#{?session_attached,#[fg=red bold],}#{session_name}: #{session_windows} windows"
bind-key , command-prompt -p "New window name:" "rename-window '%%'"
bind-key $ command-prompt -p "New session name:" "rename-session '%%'"